from io import StringIO
import pandas as pd
from bs4 import BeautifulSoup


def fetch_cve_table(html_file,output_filename ):
    # Read the HTML file
    with open(html_file, "r", encoding="utf-8") as file:
        html_content = file.read()

    # Parse the HTML content of the page
    soup = BeautifulSoup(html_content, 'html.parser')

    # Find the table in the HTML (adjust the class or id as necessary)
    table = soup.find('table')


    # Ensure the table was found
    if table:
        # Read the HTML table into a pandas DataFrame
        df = pd.read_html(StringIO(str(table)), header=0)[0]

        # Save the DataFrame to a CSV file
        df.to_csv(output_filename, index=False)
        print(f"Table has been successfully saved to '{output_filename}'.")
    else:
        print("No table found on the webpage.")


if __name__ == "__main__":
    # Define the URL and output file name
    # url = "https://community.dynatrace.com/t5/Heads-up-from-Dynatrace/Dynatrace-CVE-status-Common-Vulnerabilities-and-Exposures/ta-p/214793"
    html_file = "cve-status.html"
    output_csv = "output/scraped_assessments.csv"

    # Call the function to fetch and save the table
    fetch_cve_table(html_file, output_csv)
