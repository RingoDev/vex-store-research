import csv
import json
import os
import shutil

# Define file paths
input_csv = "output/merged_output.csv"  # Fixed file name
output_folder = "output/statements"

def csv_to_json(input_csv, output_folder):
    # Clean the output folder before running
    if os.path.exists(output_folder):
        shutil.rmtree(output_folder)
    os.makedirs(output_folder, exist_ok=True)
    existing_files = set()

    with open(input_csv, newline='', encoding='utf-8') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            cve_id = row.get("Vulnerability Identifier", "").strip()  # Fixed column name
            purl = row.get("purl", "").strip()
            product_id = purl.split('/')[-1] if purl else "unknown_product"  # Avoid errors
            filename = f"{cve_id}_{product_id}.json"
            output_json = os.path.join(output_folder, filename)

            if output_json in existing_files:
                print(f"Warning: Potential file overwrite detected for {output_json}")
            existing_files.add(output_json)

            statement = {
                "vulnerability": {
                    "id": cve_id,
                    "description": row.get("Vulnerability Description", "")  # New column added
                },
                "product": {
                    "id": purl,
                    "vers": row.get("vers", ""),
                    "name": row.get("Dynatrace component", "")
                },
                "assessment": {
                    "status": row.get("status", ""),
                    "justification": row.get("justification", ""),
                    "impactStatement": row.get("Dynatrace statement", "")
                }
            }

            with open(output_json, "w", encoding="utf-8") as jsonfile:
                json.dump(statement, jsonfile, indent=2)

if __name__ == "__main__":
    csv_to_json(input_csv, output_folder)
